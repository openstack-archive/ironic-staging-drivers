[metadata]
name = ironic-staging-drivers
summary = A project used to hold out-of-tree ironic drivers
description-file =
    README.rst
author = OpenStack
author-email = openstack-dev@lists.openstack.org
home-page = http://ironic-staging-drivers.rtfd.org
classifier =
    Environment :: OpenStack
    Intended Audience :: Information Technology
    Intended Audience :: System Administrators
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX :: Linux
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.5

[files]
packages =
    ironic_staging_drivers

[entry_points]
ironic.hardware.interfaces.deploy =
    staging-amt = ironic_staging_drivers.amt.deploy:AMTISCSIDeploy

ironic.hardware.interfaces.management =
    staging-amt = ironic_staging_drivers.amt.management:AMTManagement
    staging-libvirt = ironic_staging_drivers.libvirt.power:LibvirtManagement
    staging-ovirt = ironic_staging_drivers.ovirt.ovirt:OVirtManagement

ironic.hardware.interfaces.power =
    staging-amt = ironic_staging_drivers.amt.power:AMTPower
    staging-iboot = ironic_staging_drivers.iboot.power:IBootPower
    staging-libvirt = ironic_staging_drivers.libvirt.power:LibvirtPower
    staging-ovirt = ironic_staging_drivers.ovirt.ovirt:OVirtPower
    staging-wol = ironic_staging_drivers.wol.power:WakeOnLanPower

ironic.hardware.interfaces.vendor =
    staging-nm = ironic_staging_drivers.intel_nm.nm_vendor:IntelNMVendorPassthru

ironic.hardware.types =
    staging-amt = ironic_staging_drivers.amt.drivers:AMTHardware
    staging-iboot = ironic_staging_drivers.iboot:IBootHardware
    staging-nm = ironic_staging_drivers.intel_nm:IntelNMHardware
    staging-libvirt = ironic_staging_drivers.libvirt:LibvirtHardware
    staging-ovirt = ironic_staging_drivers.ovirt:OVirtHardware
    staging-wol = ironic_staging_drivers.wol:WOLHardware

[build_sphinx]
source-dir = doc/source
build-dir = doc/build
all_files = 1

[upload_sphinx]
upload-dir = doc/build/html

[compile_catalog]
directory = ironic-staging-drivers/locale
domain = ironic-staging-drivers

[update_catalog]
domain = ironic-staging-drivers
output_dir = ironic-staging-drivers/locale
input_file = ironic-staging-drivers/locale/ironic-staging-drivers.pot

[extract_messages]
keywords = _ gettext ngettext l_ lazy_gettext
mapping_file = babel.cfg
output_file = ironic-staging-drivers/locale/ironic-staging-drivers.pot
